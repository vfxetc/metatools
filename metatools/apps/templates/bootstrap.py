#!/usr/bin/env python -S

# This file was automatically generated by
# METATOOLS_SELF
# at METATOOLS_TIME.

import os
import sys

argv_emulation = METATOOLS_ARGV_EMULATION
target = METATOOLS_TARGET
target_type = METATOOLS_TARGET_TYPE
envvars = METATOOLS_ENVVARS
on_open_document = METATOOLS_ON_OPEN_DOCUMENT
on_open_url = METATOOLS_ON_OPEN_URL
python_path = METATOOLS_PATH


if python_path:
    sys.path[:0] = python_path

for k, v in envvars:
    os.environ[k] = v

# We defer importing many things (specifically site) until after modifying
# the environment. The automatic `import site` is disabled everywhere.
import site
import threading
import time


def load_entrypoint(spec):

    if not spec:
        return
    parts = spec.split(':')

    try:
        module = __import__(parts[0], fromlist=['.'])
    except ImportError as e:
        print >> sys.stderr, spec, 'does not exist;', e
        return

    if len(parts) > 1:
        attrs = parts[1].split('.')
        head = module
        for attr in attrs:
            head = getattr(head, attr, None)
            if head is None:
                print >> sys.stderr, spec, 'does not exist'
                return
        return head


# These two do NOT work, but I'm still working on it.
on_open_url = load_entrypoint(on_open_url)
on_open_document = load_entrypoint(on_open_document)
if argv_emulation or on_open_url or on_open_document:

    sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    from bootstrap_apple_events import AppleEventHandler

    if argv_emulation:
        handler = AppleEventHandler()
        try:
            handler.emulate_argv()
        finally:
            handler.close()

    if on_open_url or on_open_document:
        handler = AppleEventHandler()
        handler.on_open_url = on_open_url or (lambda url: None)
        handler.on_open_document = on_open_document or (lambda doc: None)
        thread = threading.Thread(target=handler.loop)
        thread.daemon = True
        thread.start()


if target_type == 'execfile':
    globals_ = {'__name__': '__main__'}
    execfile(target, globals_, globals_)
    exit(0)

if target_type == 'entrypoint':
    func = load_entrypoint(target)
    if func:
        func()
    exit(0)

print >> sys.stderr, 'metatools.app: unknown target type', target_type
exit(3)


