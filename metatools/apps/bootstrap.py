#!/usr/bin/env python

# This file was automatically generated by
# METATOOLS_SELF
# at METATOOLS_TIME.

import os
import site
import sys
import time
import threading

argv_emulation = METATOOLS_ARGV_EMULATION
command = METATOOLS_COMMAND
entrypoint = METATOOLS_ENTRYPOINT
execfile_ = METATOOLS_EXECFILE
on_open_document = METATOOLS_ON_OPEN_DOCUMENT
on_open_url = METATOOLS_ON_OPEN_URL
path = METATOOLS_PATH

if path:
    sys.path.extend(path)


def load_entrypoint(spec):

    if not spec:
        return
    parts = spec.split(':')

    try:
        module = __import__(parts[0], fromlist=['.'])
    except ImportError as e:
        print >> sys.stderr, spec, 'does not exist;', e
        return

    if len(parts) > 1:
        attrs = parts[1].split('.')
        head = module
        for attr in attrs:
            head = getattr(head, attr, None)
            if head is None:
                print >> sys.stderr, spec, 'does not exist'
                return
        return head


on_open_url = load_entrypoint(on_open_url)
on_open_document = load_entrypoint(on_open_document)
if argv_emulation or on_open_url or on_open_document:

    sys.path.insert(0, os.path.dirname(sys.executable))
    import bootstrap_ae

    if argv_emulation:
        handler = bootstrap_ae.AppleEventHandler()
        try:
            handler.emulate_argv()
        finally:
            handler.close()

    if on_open_url or on_open_document:
        handler = bootstrap_ae.AppleEventHandler()
        handler.on_open_url = on_open_url or (lambda url: None)
        handler.on_open_document = on_open_document or (lambda doc: None)
        thread = threading.Thread(target=handler.loop)
        thread.daemon = True
        thread.start()


if command:
    # We loaded python just to do this?
    os.execvp(command, [command] + sys.argv[1:])
    exit(1) # Never reached.

if execfile_:
    globals_ = {'__name__': '__main__'}
    print 'here 1'
    execfile(execfile_, globals_, globals_)
    print 'here 2'
    exit(0)

if entrypoint:
    func = load_entrypoint(entrypoint)
    if func:
        func()
    exit(0)

print >> sys.stderr, 'metatools.app: unknown bootstrapping type'
exit(3)


